#!/usr/bin/env floo
import
    OpenGL.GL as gl
    chopsui.stdui as stdui
    chopsui as sui
    random

(sui.type "random-container") class RandomContainer sui.Type sui.gl.Drawable ::
	self.rng = (random.Random)
	sui.attr method seed :: value:int -> (self.rng.seed value)
	method child :: node:sui.Node
		(node.has_type stdui.gl.Drawable) and (super.child self node)
	method draw :: width height
		map children ::
			w = (self.rng.random) * width
			h = (self.rng.random) * height
			x = (self.rng.random) * (width - w)
			y = (self.rng.random) * (height - h)
			with (self.viewport x y w h) -> child.draw w h

def glcolor :: color -> map ["r" "g" "b"] -> getattr color _

(sui.type "box" leaf=True) class Box sui.Type sui.gl.Drawable ::
	self.attrs = { "color" sui.Color }
	method draw :: width height
		gl.glClearColor *(glcolor self.color)
		gl.glClear gl.GL_COLOR_BUFFER_BIT

if __name__ == "main"
    sui = """
    window title="floo chopsui demo"
        random-container
            box color=red
            box color=blue
            box color=green
    """
    stdui.activate
    window = sui.parse sui
    window.run
